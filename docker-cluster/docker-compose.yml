version: '3.8'

# Custom top-level network
networks:
  neo4j-internal:

services:

  core1:
    # Docker image to be used
    image: ${NEO4J_DOCKER_IMAGE}

    # Hostname
    hostname: core1

    # Service-level network, which specifies the networks, from the list of the top-level networks (in this case only neo4j-internal), that the server will connect to.
    # Adds a network alias (used in neo4j.conf when configuring the discovery members)
    networks:
      neo4j-internal:
        aliases:
          - neo4j-network

    # The ports that will be accessible from outside the container - HTTP (7474) and Bolt (7687).
    ports:
      - "7474:7474"
      - "7687:7687"

    # Uncomment the volumes to be mounted to make them accessible from outside the container.
    volumes:
      - ./conf/:/conf/
      - ./core1/data:/var/lib/neo4j/data
      - ./core1/logs:/var/lib/neo4j/logs
      - ./core1/conf:/var/lib/neo4j/conf
      - ./core1/import:/var/lib/neo4j/import
      #- ./core1/metrics:/var/lib/neo4j/metrics
      #- ./core1/licenses:/var/lib/neo4j/licenses
      #- ./core1/ssl:/var/lib/neo4j/ssl
      #- ./plugins:/var/lib/neo4j/plugins

    # Passes the following environment variables to the container
    environment:
      - NEO4J_ACCEPT_LICENSE_AGREEMENT
      - NEO4J_AUTH
      - EXTENDED_CONF
      - NEO4J_EDITION
      - NEO4J_dbms_mode=CORE

    # Simple check testing whether the port 7474 is opened.
    # If so, the instance running inside the container is considered as "healthy".
    # This status can be checked using the "docker ps" command.
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider localhost:7474 || exit 1"]

    # Set up the user
    user: ${USER_ID}:${GROUP_ID}

  core2:
    image: ${NEO4J_DOCKER_IMAGE}
    hostname: core2
    networks:
      neo4j-internal:
        aliases:
          - neo4j-network
    ports:
      - "7475:7474"
      - "7688:7687"
    volumes:
      - ./conf/:/conf/
      - ./core2/data:/var/lib/neo4j/data
      - ./core2/logs:/var/lib/neo4j/logs
      - ./core2/conf:/var/lib/neo4j/conf
      - ./core2/import:/var/lib/neo4j/import
      #- ./core2/metrics:/var/lib/neo4j/metrics
      #- ./core2/licenses:/var/lib/neo4j/licenses
      #- ./core2/ssl:/var/lib/neo4j/ssl
      #- ./plugins:/var/lib/neo4j/plugins
    environment:
      - NEO4J_ACCEPT_LICENSE_AGREEMENT
      - NEO4J_AUTH
      - EXTENDED_CONF
      - NEO4J_EDITION
      - NEO4J_dbms_mode=CORE
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider localhost:7474 || exit 1"]
    user: ${USER_ID}:${GROUP_ID}

  core3:
    image: ${NEO4J_DOCKER_IMAGE}
    hostname: core3
    networks:
      neo4j-internal:
        aliases:
          - neo4j-network
    ports:
      - "7476:7474"
      - "7689:7687"
    volumes:
      - ./conf/:/conf/
      - ./core3/data:/var/lib/neo4j/data
      - ./core3/logs:/var/lib/neo4j/logs
      - ./core3/conf:/var/lib/neo4j/conf
      - ./core3/import:/var/lib/neo4j/import
      #- ./core3/metrics:/var/lib/neo4j/metrics
      #- ./core3/licenses:/var/lib/neo4j/licenses
      #- ./core3/ssl:/var/lib/neo4j/ssl
      #- ./plugins:/var/lib/neo4j/plugins
    environment:
      - NEO4J_ACCEPT_LICENSE_AGREEMENT
      - NEO4J_AUTH
      - EXTENDED_CONF
      - NEO4J_EDITION
      - NEO4J_dbms_mode=CORE
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider localhost:7474 || exit 1"]
    user: ${USER_ID}:${GROUP_ID}

  readreplica1:
    image: ${NEO4J_DOCKER_IMAGE}
    hostname: replica1
    networks:
      neo4j-internal:
        aliases:
          - neo4j-network
    ports:
      - "7477:7474"
      - "7690:7687"
    volumes:
      - ./conf/:/conf/
      - ./replica1/data:/var/lib/neo4j/data
      - ./replica1/logs:/var/lib/neo4j/logs
      - ./replica1/conf:/var/lib/neo4j/conf
      - ./replica1/import:/var/lib/neo4j/import
      #- ./replica1/metrics:/var/lib/neo4j/metrics
      #- ./replica1/licenses:/var/lib/neo4j/licenses
      #- ./replica1/ssl:/var/lib/neo4j/ssl
      #- ./plugins:/var/lib/neo4j/plugins
    environment:
      - NEO4J_ACCEPT_LICENSE_AGREEMENT
      - NEO4J_AUTH
      - EXTENDED_CONF
      - NEO4J_EDITION
      - NEO4J_dbms_mode=READ_REPLICA
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider localhost:7474 || exit 1"]
    user: ${USER_ID}:${GROUP_ID}